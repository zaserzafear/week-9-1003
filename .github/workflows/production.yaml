name: "production"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  deploy-production:
    runs-on: self-hosted
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Retag Container Image
        id: retag
        env:
          APP_IMAGE: ${{ vars.APP_IMAGE }}
        working-directory: ./manifest/dev
        run: |
          IMAGE_SOURCE=$(yq eval '.spec.template.spec.containers[0].image' deployment.yaml)
          docker pull $IMAGE_SOURCE

          IMAGE_TOCHANGE=${APP_IMAGE}:${GITHUB_RUN_ID}
          echo "IMAGE_TOCHANGE=${IMAGE_TOCHANGE}" >> $GITHUB_OUTPUT

          docker tag $IMAGE_SOURCE $IMAGE_TOCHANGE
          docker push $IMAGE_TOCHANGE

      - name: Update Deployment to k8s
        env:
          APP_IMAGE: ${{ steps.retag.outputs.IMAGE_TOCHANGE }}
        working-directory: ./manifest/prod
        run: |
          yq -i '.spec.template.spec.containers[0].image = strenv(APP_IMAGE)' deployment.yaml
          kubectl apply -f deployment.yaml -n ${{ secrets.KUBE_NAMESPACE }}

      - name: Commit and push changes
        env:
          APP_IMAGE: ${{ steps.retag.outputs.IMAGE_TOCHANGE }}
        working-directory: ./manifest/prod
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git checkout main
          git add deployment.yaml
          git commit -m "bot: update deployment ${APP_IMAGE}"
          git push
