name: "develop"

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  # analyze:
  #   name: Analyze CodeQL
  #   runs-on: self-hosted
  #   permissions:
  #     actions: read
  #     contents: read
  #     security-events: write

  #   defaults:
  #     run:
  #       working-directory: ./application/sample_csharp

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       language: ["csharp"]

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v2
  #       with:
  #         languages: ${{ matrix.language }}

  #     - name: Autobuild
  #       uses: github/codeql-action/autobuild@v2

  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@v2
  #       with:
  #         category: "/language:${{matrix.language}}"

  #     - name: Save CodeQL results
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: codeql-results
  #         path: ./codeql-results

  containerize:
    name: Build & Push Docker Image
    runs-on: self-hosted

    # needs: analyze

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build the Docker image
        working-directory: ./application/sample_csharp
        run: |
          docker build . --file Dockerfile --tag ${{ vars.APP_IMAGE }}:$GITHUB_SHA

      - name: Log in to Docker Hub or your container registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push the Docker image
        run: docker push ${{ vars.APP_IMAGE }}:$GITHUB_SHA

  deploy-to-develop:
    needs: containerize
    runs-on: self-hosted
    environment: develop

    defaults:
      run:
        working-directory: ./manifest/dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Kube Config
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          mkdir -p $HOME/.kube
          mv kubeconfig $HOME/.kube/config

      - name: Set KUBE_CONTEXT
        run: |
          kubectl config use-context "${{ secrets.KUBE_CONTEXT }}"

      - name: Update Deployment to k8s
        run: |
          export APP_IMAGE_URL=${{ vars.APP_IMAGE }}:${{ github.sha }}
          yq -i '.spec.template.spec.containers[0].image = strenv(APP_IMAGE_URL)' deployment.yaml
          kubectl apply -f deployment.yaml -n ${{ vars.KUBE_NAMESPACE }}

      - name: Commit and push changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add deployment.yaml
          git commit -m "bot: update deployment ${{ github.sha }}"
          git push
